/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 int li(ListNode* head)
 { if(head==nullptr) {return 0;}
 if(head->next==nullptr) return 1;
    int c=0;
    ListNode* temp=head;
    while(temp!=nullptr)
    {
        temp=temp->next;
        c++;
    }
    return c;
 }
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int p) {
        if(head==NULL||head->next==NULL||p==0)
        {
            return head;
        }
        ListNode* temp=head;
        int l=li(head);
       p=p%l;
       if(p==0)
       {
        return head;
       }
       int si=l-p;
      
      for(int i=1;i<si;i++)
      {
        temp=temp->next;
      }
       ListNode* ki=temp->next;
       temp->next=nullptr;
       ListNode* kis=ki;
       while(kis->next!=nullptr)
       {
        kis=kis->next;
       }
       kis->next=head;
       head=ki;
       return head;
    }
};
