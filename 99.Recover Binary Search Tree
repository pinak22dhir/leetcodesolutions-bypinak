/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     TreeNode prev=null;
     TreeNode a=null;
     TreeNode b=null;

    public void recoverTree(TreeNode root) {
        if(root==null){
            return;
        }
        inorder(root);
      
        int temp=a.val;
        a.val=b.val;
        b.val=temp;

       
    }
    void inorder(TreeNode root){
        if(root==null){
            return;
        }
        //9 10 20 8  18 
        inorder(root.left);
        if(prev!=null){
            if(root.val<prev.val){
                if(a==null){
                  a=prev;
                }
                  b=root;
            }
        }
        prev=root;

        inorder(root.right);
     
    }
}
