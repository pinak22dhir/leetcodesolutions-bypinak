class Solution {
    public int minimumSize(int[] nums, int maxOperations) {
        int max=0;
        for(int i=0;i<nums.length;i++){
            max=Math.max(max,nums[i]);
        }
        return helper(1,max,nums,maxOperations);
    }
    static int helper(int a,int b,int[] nums,int max){
        int result=b;
        while(a<=b){
            int mid=a+(b-a)/2;
            if(ispossible(mid,nums,max)){
                result=mid;
                b=mid-1;
            }
            else{
             a=mid+1;
            }
        }
        return result;
    }
    static boolean ispossible(int mid,int nums[],int max){
        int c=0;
       for(int i:nums){
        if(i>mid){
         c+=(i-1)/mid;
        }
       }
       return c<=max;
    }
}
