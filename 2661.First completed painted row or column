class Solution {
    static class pair{
        int a;
        int b;
        pair(int a,int b){
            this.a=a;
            this.b=b;
        }
    }
    public int firstCompleteIndex(int[] arr, int[][] mat) {
        int c=0;
        HashMap<Integer,pair>mp=new HashMap<>();
        for(int i=0;i<mat.length;i++){
            for(int j=0;j<mat[i].length;j++){
                mp.put(mat[i][j],new pair(i,j));
            }
        }
        int rowa[]=new int[mat.length];
        int colb[]=new int[mat[0].length];
        int in=-1;
        for(int i=0;i<arr.length;i++){
            if(mp.containsKey(arr[i])){
                pair p=mp.get(arr[i]);
                int row=p.a;
                int col=p.b;
                rowa[row]++;
                colb[col]++; 
                if(rowa[row]==mat[0].length||colb[col]==mat.length){
                     return i;
                }   
            }
        }
        return in;
    }
    static boolean check(boolean arr2[][],int r,int c){
        boolean flag=true;
        boolean flag2=true;
           for(int k=0;k<arr2.length;k++){
            if(arr2[k][c]==false){flag=false;}
           }
           for(int k=0;k<arr2[0].length;k++){
            if(arr2[r][k]==false){flag2=false;}
           }
         
           return flag||flag2;
    }
}
