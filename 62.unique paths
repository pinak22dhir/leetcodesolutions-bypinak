class Solution {
    public int uniquePaths(int m, int n) {
        int dp[][]=new int[m][n];
        dp[0][0]=1;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
           if(i>0){     
            dp[i][j]+=dp[i-1][j];}
            if(j>0){
            dp[i][j]+=dp[i][j-1];
            }
            }
        }
       return dp[m-1][n-1]; 
    }
    int unique(int i,int j,int m,int n,int[][] dp){
        if(i==m-1 && j==n-1){
            return 1;
        }
        if(i>=m||j>=n) return 0;
        if(dp[i][j]!=-1){return dp[i][j];}
        int max=0;
        int down=unique(i+1,j,m,n,dp);
        int right=unique(i,j+1,m,n,dp);
        max=down+right;
        dp[i][j]=max;
        return max;
    }
}
