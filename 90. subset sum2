class Solution {
public:
void helper(vector<int> &nums,int index,vector<vector<int>> &pi,vector<int> ds)
{
    pi.push_back(ds);
    for(int i=index;i<nums.size();i++)
    {
    if(i!=index && nums[i]==nums[i-1]) continue;
    ds.push_back(nums[i]);
    helper(nums,i+1,pi,ds);
    ds.pop_back();
   
    } 
    return;

}
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> pi;
        vector<int> ds;
        sort(nums.begin(),nums.end());
        helper(nums,0,pi,ds);
        return pi;
    }
};
