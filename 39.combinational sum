class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> li=new ArrayList<>();
        List<Integer>ls=new ArrayList<>();
        rec(li,ls,candidates,target,0);
        return li;
    }
    void rec(List<List<Integer>> li,List<Integer> ls,int[] candidates,int target,int index){
         if(index==candidates.length||target<0){
        return;
       }
        if(target==0){
            li.add(new ArrayList<>(ls));
            return;
        }
       ls.add(candidates[index]);
       rec(li,ls,candidates,target-candidates[index],index);
       ls.remove(ls.size()-1);
    rec(li,ls,candidates,target,index+1);
    }
}
