/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL||head->next==NULL)
        {
            return head;
        }
     ListNode* temp=head;
     ListNode* temp2=head->next;
     int c=0;
     while(temp!=NULL)
    {
        temp=temp->next;
        c++;
    }
     temp=head;
    vector<int>arr;
while(temp!=nullptr && temp->next!=nullptr){
       arr.push_back(temp->val);
       temp=temp->next->next;}
       if(temp){
        arr.push_back(temp->val);
       }
while(temp2!=nullptr && temp2->next!=nullptr){
       arr.push_back(temp2->val);
       temp2=temp2->next->next;}
        if(temp2){
        arr.push_back(temp2->val);
       }
       temp=head;
for(int i=0;i<arr.size();i++)
{   temp->val=arr[i];
  temp=temp->next;  
}
return head;
    }
};
