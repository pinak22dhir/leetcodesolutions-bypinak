/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
void inorder(TreeNode* root,vector<int> &ans){
         if (root == NULL) {
            return;
        }
     inorder(root->left,ans);
//   ans.insert(ans.end(), left.begin(),left.end() );
     ans.push_back(root->val);
     inorder(root->right,ans);
    // ans.insert(ans.end(), right.begin(),right.end() );
}
    vector<int> inorderTraversal(TreeNode* root) {
    //     vector<int> inorder;
    //     if (root == NULL) {
    //         return inorder;
    //     }
    //  vector<int>left= inorderTraversal(root->left);
    // inorder.insert(inorder.end(), left.begin(),left.end() );
    // inorder.push_back(root->val);
    // vector<int> right=  inorderTraversal(root->right);
    // inorder.insert(inorder.end(), right.begin(),right.end() );
   vector<int> ans;
   inorder(root,ans);
    return ans;
    }
};
