void spiral(int n,vector<vector<int>> &Matrix)
{   int left=0;
   int right=n-1;
   int top=0;
   int bottom=n-1;
   int direction=0;
   int k=1;
   while(left<=right && top<=bottom){
    if(direction==0){
        for(int i=left;i<=right;i++){
            Matrix[top][i]=k++;
                }

        top++;
     direction++;
    }
     if(direction==1){
         for(int i=top;i<=bottom;i++){
            Matrix[i][right]=k++;  
        }
        right--;
     direction++;
    }
     if(direction==2){
        for(int i=right;i>=left;i--){
            Matrix[bottom][i]=k++;
          
        }
     
        bottom--;
     direction++;
    }
     if(direction==3){
         for(int i=bottom;i>=top;i--){
            Matrix[i][left]=k++;
         
        }
      
        left++;
     direction++;
    }
    direction=(direction)%4;
   }
    }
    
class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>>Matrix(n,vector<int>(n,0));
        spiral(n,Matrix);
        return Matrix;
        
    }
};
