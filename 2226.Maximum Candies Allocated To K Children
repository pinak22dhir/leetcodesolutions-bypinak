import java.util.*;

class Solution {
    public int maximumCandies(int[] candies, long k) {

        int min = 1;
        int max = 0;
        for (int i = 0; i < candies.length; i++) {
            max = Math.max(max, candies[i]);
        }
        return function(min, max, candies, k);
    }

    static int function(int l, int h, int[] candies, long k) {

        int val = 0;
        while (l <= h) {
            int mid = l + (h - l) / 2;
            if (satisfy(mid, candies, k)) {
                val = mid;
                l = mid + 1;
            } else {
                h = mid - 1;
            }
        }
        return val;
    }

    static boolean satisfy(int val, int[] candies, long k) {
        long c = 0;
        for (int i = 0; i < candies.length; i++) {
            c += candies[i] / val;
        }
        return c >= k;
    }
}
222
