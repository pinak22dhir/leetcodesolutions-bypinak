/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxPathSum(TreeNode root) {
        if(root==null){
            return 0;
        }
        int pi[]=new int[1];
        pi[0]=Integer.MIN_VALUE;
        int left=find(root,pi);
        return pi[0];
    }
    int find(TreeNode root,int[] pi){
        if(root==null){
            return 0;
        }
        int ki=Math.max(0,find(root.left,pi));
        int si=Math.max(0,find(root.right,pi));
       pi[0]=Math.max(pi[0],root.val+ki+si);
        return root.val+Math.max(ki,si);

    }
}
