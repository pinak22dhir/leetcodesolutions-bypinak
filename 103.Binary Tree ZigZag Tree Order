/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    List<List<Integer>> lis=new ArrayList<>();
        if(root==null){
            return lis;
        }
        Queue<TreeNode> qu=new LinkedList<>();
        qu.add(root);
        boolean bi =true;
        
        while(!qu.isEmpty()){
            int a=qu.size();
            int c=0;
            List<Integer> li=new ArrayList<>();
             for(int i=0;i<c;i++){
                TreeNode p=qu.poll();
                li.add(p.val);
                if(p.left!=null){
                    qu.add(p.left);
            
                }
                if(p.right!=null){
                    qu.add(p.right);
                } 
       
            }
            if(!bi){
             Collections.reverse(li);
            }
            lis.add(li);
            bi=!bi;   
        }
    return lis;    
    }
}
