class Solution {
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        //0 4 --> 0 3 4 --> 0 1 3 4// 0 1 4 
        int n=graph.length-1;
        ArrayList<ArrayList<Integer>> li=new ArrayList<>();
        for(int i=0;i<=n;i++){
            li.add(new ArrayList<>());
        }
        for(int i=0;i<graph.length;i++){
            for(int j=0;j<graph[i].length;j++){ 
              li.get(i).add(graph[i][j]);
            }
        }
        List<Integer> ls=new ArrayList<>();
        List<List<Integer>> lsi=new ArrayList<>();
        helper(graph,ls,lsi,0,li);
      return lsi;
    }
    static void helper(int graph[][],List<Integer> ls,List<List<Integer>>lsi,int node,ArrayList<ArrayList<Integer>> li){
        ls.add(node);
        if(node==graph.length-1){
            lsi.add(new ArrayList<>(ls));
              ls.remove(ls.size()-1);
            return;
        }
        for(int n:li.get(node)){
           helper(graph,ls,lsi,n,li);
        }
        ls.remove(ls.size()-1);
    }
}
