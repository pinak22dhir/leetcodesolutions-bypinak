/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

// Function to calculate the length of the linked list
int l(ListNode* head) {
    int c = 0;
    ListNode* temp = head;
    while (temp != NULL) {
        temp = temp->next;
        c++;
    }
    return c;
}

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if (head == NULL) return NULL;

        int length = l(head);
        
        ListNode* temp = head;
        int pos = length - n;
        if(pos==0)
        {  head=head->next;
            return head;
        }

        for (int i = 1; i < pos; i++) {
            temp = temp->next;
        }
     
        temp->next = temp->next->next;    
         return head;
    }
};
